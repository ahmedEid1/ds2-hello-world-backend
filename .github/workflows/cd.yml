name: Backend CI/CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker images
        run: |
          docker buildx build --push --tag ${{ secrets.DOCKER_USERNAME }}/my-backend:latest ./app
          docker buildx build --push --tag ${{ secrets.DOCKER_USERNAME }}/configure-keycloak:latest ./keycloak
        working-directory: .

      - name: Set Kubernetes context
        run: echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}

      - name: Create Secrets for Development
        if: github.ref == 'refs/heads/dev'
        run: |
          kubectl create secret generic backend-secret --from-literal=DB_USER=${{ secrets.DB_USER_DEV }} --from-literal=DB_PASSWORD=${{ secrets.DB_PASSWORD_DEV }} --dry-run=client -o yaml | kubectl apply -f -
          kubectl create secret generic keycloak-db-secret --from-literal=POSTGRES_USER=${{ secrets.POSTGRES_USER }} --from-literal=POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} --dry-run=client -o yaml | kubectl apply -f -
          kubectl create secret generic keycloak-secret --from-literal=KEYCLOAK_ADMIN=${{ secrets.KEYCLOAK_ADMIN }} --from-literal=KEYCLOAK_ADMIN_PASSWORD=${{ secrets.KEYCLOAK_ADMIN_PASSWORD }} --from-literal=DB_USER=${{ secrets.POSTGRES_USER }} --from-literal=DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} --dry-run=client -o yaml | kubectl apply -f -
          kubectl create secret generic mysql-secret --from-literal=MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD_DEV }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Create Secrets for Production
        if: github.ref == 'refs/heads/main'
        run: |
          kubectl create secret generic backend-secret --from-literal=DB_USER=${{ secrets.DB_USER_PROD }} --from-literal=DB_PASSWORD=${{ secrets.DB_PASSWORD_PROD }} --dry-run=client -o yaml | kubectl apply -f -
          kubectl create secret generic keycloak-db-secret --from-literal=POSTGRES_USER=${{ secrets.POSTGRES_USER }} --from-literal=POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} --dry-run=client -o yaml | kubectl apply -f -
          kubectl create secret generic keycloak-secret --from-literal=KEYCLOAK_ADMIN=${{ secrets.KEYCLOAK_ADMIN }} --from-literal=KEYCLOAK_ADMIN_PASSWORD=${{ secrets.KEYCLOAK_ADMIN_PASSWORD }} --from-literal=DB_USER=${{ secrets.POSTGRES_USER }} --from-literal=DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} --dry-run=client -o yaml | kubectl apply -f -
          kubectl create secret generic mysql-secret --from-literal=MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD_PROD }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy to Development
        if: github.ref == 'refs/heads/dev'
        run: |
          kubectl apply -k k8s/overlays/dev

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          kubectl apply -k k8s/overlays/prod
